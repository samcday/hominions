apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: synapse
  namespace: synapse
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: synapse
  serviceName: synapse
  template:
    metadata:
      labels:
        app.kubernetes.io/name: synapse
    spec:
      containers:
        - name: litestream
          image: litestream/litestream:0.3.9
          args: ['replicate']
          volumeMounts: &litestreamvols
            - name: data
              mountPath: /data
            - name: litestream-config
              mountPath: /etc/litestream.yml
              subPath: litestream.yml
          envFrom: &litestreamenv
            - secretRef:
                name: backup-bucket
          ports:
            - name: ls-metrics
              containerPort: 9090
        - image: matrixdotorg/synapse:v1.80.0
          name: synapse
          ports:
            - name: synapse
              containerPort: 8008
            - name: metrics
              containerPort: 9000
          env:
            - name: SYNAPSE_CONFIG_PATH
              value: /config/homeserver.yaml
          volumeMounts:
            - name: config
              mountPath: /config
            - name: data
              mountPath: /data
            - name: media
              mountPath: /data/media
            - name: signing-key
              mountPath: /signing-key
      initContainers:
        - name: init-litestream-synapse
          image: litestream/litestream:0.3.9
          args: ['restore', '-if-db-not-exists', '-if-replica-exists', '-v', '/data/synapse.db']
          volumeMounts: *litestreamvols
          envFrom: *litestreamenv
        - name: config
          image: alpine:3
          command:
            - sh
            - -c
            - |-
              set -uexo pipefail

              chown -R 991:991 /data

              sed -e "s/_AS_/$WA_AS_TOKEN/" -e "s/_HS_/$WA_HS_TOKEN/" < /config-templates/registration-whatsapp.yaml > /config/registration-whatsapp.yaml
              sed -e "s/_AS_/$TELE_AS_TOKEN/" -e "s/_HS_/$TELE_HS_TOKEN/" < /config-templates/registration-telegram.yaml > /config/registration-telegram.yaml
              sed -e "s/_AS_/$SIG_AS_TOKEN/" -e "s/_HS_/$SIG_HS_TOKEN/" < /config-templates/registration-signal.yaml > /config/registration-signal.yaml

              cp /config-templates/log.yaml /config/
              sed -e "s/_MACAROON_/$MACAROON_SECRET_KEY/" -e "s/_REG_/$REGISTRATION_SECRET/" < /config-templates/homeserver.yaml > /config/homeserver.yaml
          envFrom:
            - secretRef:
                name: bridge-signal
            - secretRef:
                name: bridge-telegram
            - secretRef:
                name: -  volumeClaimTemplates:
-    - metadata:
-        name: data
-      spec:
-        accessModes: [ReadWriteOnce]
-        storageClassName: nfs
-        resources:
-          requests:
-            storage: 1Gi
h: /config
            - name: data
              mountPath: /data
            - name: media
              mountPath: /data/media
      tolerations:
        - key: samcday.com/cloud
          operator: Exists
          effect: NoExecute
      volumes:
        - name: config-templates
          configMap:
            name: config
        - name: config
          emptyDir: {}
        - name: litestream-config
          configMap:
            name: litestream-config
        - name: media
          persistentVolumeClaim:
            claimName: media
        - name: signing-key
          secret:
            secretName: signing-key
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: [ReadWriteOnce]
        storageClassName: openebs-hostpath
        resources:
          requests:
            storage: 1Gi

---
apiVersion: v1
kind: Service
metadata:
  name: synapse
  namespace: synapse
spec:
  ports:
  - port: 8008
    protocol: TCP
    targetPort: 8008
  selector:
    app.kubernetes.io/name: synapse
---
apiVersion: monitoring.coreos.com/v1
kind: PodMonitor
metadata:
  name: synapse
  namespace: synapse
spec:
  podMetricsEndpoints:
    - port: ls-metrics
    - port: metrics
      relabelings:
        - action: replace
          sourceLabels: [__meta_kubernetes_pod_name]
          targetLabel: instance
      path: /_synapse/metrics
  selector:
    matchLabels:
      app.kubernetes.io/name: synapse
