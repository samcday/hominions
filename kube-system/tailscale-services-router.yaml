# A simple non-HA tailscale subnet router deployment to make the k8s services CIDR of the cluster routable anywhere in the Tailnet.
# Cilium resolves to the actual endpoint (usually a specific pod IP) which doesn't route through here.
# As an added bonus, my Fly.io 6PNs are also made routable.
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: headscale-6pn-cfg
  namespace: kube-system
data:
  wg0.conf: |
    [Interface]
    Address = fdaa:0:b5a8:a7b:8dd7:0:a:2b02/120
    ListenPort = 51820
    PostUp = wg set wg0 private-key /etc/wireguard/privatekey && iptables -t nat -A POSTROUTING -s 10.33.0.0/24 -o eth0 -j MASQUERADE
    PostDown = ip6tables -t nat -D POSTROUTING -s fdaa:0:b5a8::/48 -o eth0 -j MASQUERADE

    [Peer]
    PublicKey = KC8fjwgUb9FD3xyuhqCcl/igTVRapt9zC1goAPGtIDs=
    AllowedIPs = fdaa:0:b5a8::/48
    Endpoint = fra2.gateway.6pn.dev:51820
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tailscale-services-router
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tailscale-services-router
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: tailscale-services-router
    spec:
      initContainers:
        - name: sysctls
          image: busybox
          command:
          - sh
          - -c
          - |-
            sysctl -w net.ipv4.ip_forward=1 && sysctl -w net.ipv6.conf.all.forwarding=1
            until nslookup tailscale.com; do sleep 1; done
          securityContext:
            capabilities:
              add:
                - NET_ADMIN
            privileged: true
      containers:
        - name: wireguard
          image: masipcat/wireguard-go:latest
          command:
            - sh
            - -c
            - echo "Public key '$(wg pubkey < /etc/wireguard/privatekey)'" && /entrypoint.sh
          ports:
            - containerPort: 51820
              protocol: UDP
              name: wireguard
          env:
            - name: LOG_LEVEL
              value: info
          securityContext:
            capabilities:
              add: [NET_ADMIN]
            privileged: true
          resources:
            requests:
              memory: 64Mi
              cpu: "100m"
            limits:
              cpu: '2'
              memory: 256Mi
          volumeMounts:
            - name: cfgmap
              mountPath: /etc/wireguard/wg0.conf
              subPath: wg0.conf
            - name: secret
              mountPath: /etc/wireguard/privatekey
              subPath: privatekey
        - image: tailscale/tailscale:v1.33
          name: tailscale
          command:
            - /bin/sh
            - -c
            - |-
              tailscaled --state=kube:services-ts-auth-key --socket=/tmp/tailscaled.sock --tun=userspace-networking &
              PID=$!
              tailscale --socket=/tmp/tailscaled.sock up --login-server=https://samcday-headscale.fly.dev/ --authkey=$TS_AUTH_KEY --accept-dns=false --advertise-routes=10.43.0.0/16,fdaa:0:b5a8::/48
              wait $PID
          envFrom:
            - secretRef:
                name: services-tailscale-auth
          resources:
            limits:
              cpu: '2'
              memory: 1Gi
      serviceAccountName: tailscale-services-router
      volumes:
        - name: cfgmap
          configMap:
            name: headscale-6pn-cfg
        - name: secret
          secret:
            secretName: headscale-6pn-priv
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: tailscale-services-router
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: tailscale-services-router
  namespace: kube-system
rules:
- apiGroups: [""]
  resources: [secrets]
  verbs: [create]
- apiGroups: [""]
  resources: [secrets]
  resourceNames: [services-ts-auth-key]
  verbs: [get, update]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: tailscale-services-router
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: tailscale-services-router
subjects:
- kind: ServiceAccount
  name: tailscale-services-router
