# A simple non-HA tailscale subnet router deployment to make the k8s services CIDR of the cluster routable anywhere in the Tailnet.
# Cilium resolves to the actual endpoint (usually a specific pod IP) which doesn't route through here.
# As an added bonus, my Fly.io 6PNs are also made routable.
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tailscale-services-router
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tailscale-services-router
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: tailscale-services-router
    spec:
      containers:
        - name: wireguard
          image: cmulk/wireguard-docker:alpine
          securityContext:
            capabilities:
              add: [NET_ADMIN]
            privileged: true
          resources:
            requests:
              memory: 64Mi
              cpu: "100m"
            limits:
              cpu: '2'
              memory: 256Mi
          volumeMounts:
            - name: secret
              mountPath: /etc/wireguard/wg0.conf
              subPath: wg0.conf
        - image: tailscale/tailscale:v1.33
          name: tailscale
          command:
            - /bin/sh
            - -c
            - |-
              tailscaled --state=kube:services-ts-auth-key --socket=/tmp/tailscaled.sock --tun=userspace-networking &
              PID=$!
              tailscale --socket=/tmp/tailscaled.sock up --login-server=https://samcday-headscale.fly.dev/ --authkey=$TS_AUTH_KEY --accept-dns=false --advertise-routes=10.43.0.0/16,fdaa:0:b5a8::/48
              wait $PID
          envFrom:
            - secretRef:
                name: services-tailscale-auth
          livenessProbe:
            exec:
              command:
                - tailscale
                - --socket=/tmp/tailscaled.sock
                - status
            initialDelaySeconds: 3
            periodSeconds: 5
          resources:
            requests:
              cpu: 100m
              memory: 64Mi
            limits:
              cpu: '2'
              memory: 1Gi
      nodeSelector:
        node-role.kubernetes.io/hcloud: ''
      serviceAccountName: tailscale-services-router
      tolerations:
        - key: samcday.com/hcloud
          operator: Exists
      volumes:
        - name: secret
          secret:
            secretName: headscale-6pn-priv
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: tailscale-services-router
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: tailscale-services-router
  namespace: kube-system
rules:
- apiGroups: [""]
  resources: [secrets]
  verbs: [create]
- apiGroups: [""]
  resources: [secrets]
  resourceNames: [services-ts-auth-key]
  verbs: [get, update]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: tailscale-services-router
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: tailscale-services-router
subjects:
- kind: ServiceAccount
  name: tailscale-services-router
