apiVersion: apps/v1
kind: Deployment
metadata:
  name: invidious
  namespace: invidious
  labels:
    app: invidious
spec:
  replicas: 2
  selector:
    matchLabels:
      app: invidious
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: invidious
    spec:
      containers:
        - image: quay.io/invidious/invidious:88007a08f20bda3891986312760d83adbdb800e5
          name: invidious
          env:
            - name: INVIDIOUS_CONFIG_FILE
              value: /config/config.yaml
          readinessProbe:
            httpGet:
              path: /api/v1/stats
              port: 3000
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /api/v1/stats
              port: 3000
            periodSeconds: 5
            failureThreshold: 2
          ports:
            - containerPort: 3000
          resources:
            requests:
              cpu: 250m
              memory: 192Mi
            limits:
              cpu: '2'
              memory: 256Mi
          volumeMounts:
            - name: config
              mountPath: /config
      enableServiceLinks: false
      initContainers:
        - name: config
          image: supinf/envsubst
          command:
            - sh
            - -c
            - |-
              envsubst < /config-template/config.yaml > /config/config.yaml
          env:
            - name: PG_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-postgresql
                  key: postgres-password
            - name: CAPTCHA_KEY
              valueFrom:
                secretKeyRef:
                  name: invidious
                  key: anticaptcha
            - name: HMAC_KEY
              valueFrom:
                secretKeyRef:
                  name: invidious
                  key: hmac
          volumeMounts:
            - name: config-template
              mountPath: /config-template
            - name: config
              mountPath: /config
      nodeSelector:
        samcday.com/hcloud: ""
      tolerations:
        - key: samcday.com/hcloud
          operator: Exists
      volumes:
        - name: config-template
          configMap:
            name: config
        - name: config
          emptyDir: {}
